
/*
 *    MCreator note: This file will be REGENERATED on each build.
 */
package net.thirdlife.iterrpg.init;

import net.minecraft.world.item.BlockItem;
import net.minecraft.world.item.Item;
import net.thirdlife.iterrpg.common.block.WitchmudBlock;
import net.thirdlife.iterrpg.common.block.WeavedHivestoneBlock;
import net.thirdlife.iterrpg.common.block.WaterSealBlock;
import net.thirdlife.iterrpg.common.block.VoidSealBlock;
import net.thirdlife.iterrpg.common.block.VoidMawBlock;
import net.thirdlife.iterrpg.common.block.VaseDecoBlock;
import net.thirdlife.iterrpg.common.block.VaseBlock;
import net.thirdlife.iterrpg.common.block.TwiffleBlockBlock;
import net.thirdlife.iterrpg.common.block.TwiffleBlock;
import net.thirdlife.iterrpg.common.block.TombstoneBlock;
import net.thirdlife.iterrpg.common.block.TendonsBlockBlock;
import net.thirdlife.iterrpg.common.block.TearCatcherBlock;
import net.thirdlife.iterrpg.common.block.StrippedSacredLogBlock;
import net.thirdlife.iterrpg.common.block.SpireSpawnerBlock;
import net.thirdlife.iterrpg.common.block.SpiderSilkBlockBlock;
import net.thirdlife.iterrpg.common.block.SpiderEggBlock;
import net.thirdlife.iterrpg.common.block.SorrowSpireGenBlockBlock;
import net.thirdlife.iterrpg.common.block.SmallVaseDecoBlock;
import net.thirdlife.iterrpg.common.block.SmallVaseBlock;
import net.thirdlife.iterrpg.common.block.SilkyHivestoneBlock;
import net.thirdlife.iterrpg.common.block.SacredWoodBlock;
import net.thirdlife.iterrpg.common.block.SacredTrapdoorBlock;
import net.thirdlife.iterrpg.common.block.SacredStairsBlock;
import net.thirdlife.iterrpg.common.block.SacredSlabBlock;
import net.thirdlife.iterrpg.common.block.SacredSaplingBlock;
import net.thirdlife.iterrpg.common.block.SacredPressurePlateBlock;
import net.thirdlife.iterrpg.common.block.SacredPlanksBlock;
import net.thirdlife.iterrpg.common.block.SacredLogBlock;
import net.thirdlife.iterrpg.common.block.SacredLeavesBlock;
import net.thirdlife.iterrpg.common.block.SacredFenceGateBlock;
import net.thirdlife.iterrpg.common.block.SacredFenceBlock;
import net.thirdlife.iterrpg.common.block.SacredDoorBlock;
import net.thirdlife.iterrpg.common.block.SacredButtonBlock;
import net.thirdlife.iterrpg.common.block.RunicHivestoneBlock;
import net.thirdlife.iterrpg.common.block.RunicGrimstoneBlock;
import net.thirdlife.iterrpg.common.block.RunicGrimstoneActiveBlock;
import net.thirdlife.iterrpg.common.block.ProfaneFleshBlockBlock;
import net.thirdlife.iterrpg.common.block.PolishedGrimstoneWallBlock;
import net.thirdlife.iterrpg.common.block.PolishedGrimstoneStairsBlock;
import net.thirdlife.iterrpg.common.block.PolishedGrimstoneSlabBlock;
import net.thirdlife.iterrpg.common.block.PolishedGrimstoneBlock;
import net.thirdlife.iterrpg.common.block.PearlBlockBlock;
import net.thirdlife.iterrpg.common.block.NetherrackGeoditeBlock;
import net.thirdlife.iterrpg.common.block.MonolithWallBlock;
import net.thirdlife.iterrpg.common.block.MonolithStoneBlock;
import net.thirdlife.iterrpg.common.block.MonolithStairsBlock;
import net.thirdlife.iterrpg.common.block.MonolithSlabBlock;
import net.thirdlife.iterrpg.common.block.MagmanumOreBlock;
import net.thirdlife.iterrpg.common.block.MagmanumBlockBlock;
import net.thirdlife.iterrpg.common.block.InfestedHivestoneBlock;
import net.thirdlife.iterrpg.common.block.HivestoneWallBlock;
import net.thirdlife.iterrpg.common.block.HivestoneStairsBlock;
import net.thirdlife.iterrpg.common.block.HivestoneSlabBlock;
import net.thirdlife.iterrpg.common.block.HivestoneBlock;
import net.thirdlife.iterrpg.common.block.HalflowerBlock;
import net.thirdlife.iterrpg.common.block.GunpowderBarrelBlock;
import net.thirdlife.iterrpg.common.block.GrimstoneSlabBlock;
import net.thirdlife.iterrpg.common.block.GrimstoneBricksWallBlock;
import net.thirdlife.iterrpg.common.block.GrimstoneBricksStairsBlock;
import net.thirdlife.iterrpg.common.block.GrimstoneBricksSlabBlock;
import net.thirdlife.iterrpg.common.block.GrimstoneBricksBlock;
import net.thirdlife.iterrpg.common.block.GrimstoneBlock;
import net.thirdlife.iterrpg.common.block.GrimaceTrapBlock;
import net.thirdlife.iterrpg.common.block.GrimSoultrapBlock;
import net.thirdlife.iterrpg.common.block.GrimLockerBlock;
import net.thirdlife.iterrpg.common.block.GrimKeyholeBlock;
import net.thirdlife.iterrpg.common.block.GraveCrossBlock;
import net.thirdlife.iterrpg.common.block.GrandSpireSpawnerBlock;
import net.thirdlife.iterrpg.common.block.GobsteelBlockBlock;
import net.thirdlife.iterrpg.common.block.GoblinSpawnerBlock;
import net.thirdlife.iterrpg.common.block.GoblinDungeonGenBlock;
import net.thirdlife.iterrpg.common.block.GiantPhantomChainBlock;
import net.thirdlife.iterrpg.common.block.GiantChainBlock;
import net.thirdlife.iterrpg.common.block.GeoditeBlock;
import net.thirdlife.iterrpg.common.block.GenericDungeonGenBlockBlock;
import net.thirdlife.iterrpg.common.block.FireSealBlock;
import net.thirdlife.iterrpg.common.block.EndstoneGeoditeBlock;
import net.thirdlife.iterrpg.common.block.EarthSealBlock;
import net.thirdlife.iterrpg.common.block.DrillBlock;
import net.thirdlife.iterrpg.common.block.DemonbonesBlock;
import net.thirdlife.iterrpg.common.block.DeepslateGeoditeBlock;
import net.thirdlife.iterrpg.common.block.CutHivestoneBlock;
import net.thirdlife.iterrpg.common.block.CrumblingHivestoneBlock;
import net.thirdlife.iterrpg.common.block.CrackedHivestoneBlock;
import net.thirdlife.iterrpg.common.block.CrackedGrimstoneBricksBlock;
import net.thirdlife.iterrpg.common.block.CompactedSorrowsealedBlock;
import net.thirdlife.iterrpg.common.block.CoinPileBlock;
import net.thirdlife.iterrpg.common.block.CoinBlockBlock;
import net.thirdlife.iterrpg.common.block.CloudBlockBlock;
import net.thirdlife.iterrpg.common.block.ChiseledGrimstoneBricksBlock;
import net.thirdlife.iterrpg.common.block.ChargedGrimstoneBricksBlock;
import net.thirdlife.iterrpg.common.block.CattailBlock;
import net.thirdlife.iterrpg.common.block.BlackstoneGeoditeBlock;
import net.thirdlife.iterrpg.common.block.BigVaseDecoBlock;
import net.thirdlife.iterrpg.common.block.BigVaseBlock;
import net.thirdlife.iterrpg.common.block.BarrierProjectorBlock;
import net.thirdlife.iterrpg.common.block.ArthropodCatacombsGenBlockBlock;
import net.thirdlife.iterrpg.common.block.ArcanistTableBlock;
import net.thirdlife.iterrpg.common.block.ArcaneFlowerSeedsBlock;
import net.thirdlife.iterrpg.common.block.ArcaneFlowerBlock;
import net.thirdlife.iterrpg.common.block.AmetrineBricksBlock;
import net.thirdlife.iterrpg.common.block.AmetrineBlockBlock;
import net.thirdlife.iterrpg.common.block.AirSealBlock;
import net.thirdlife.iterrpg.common.block.AbyssquartzBlockBlock;
import net.thirdlife.iterrpg.common.block.AbyssQuartzBlock;
import net.thirdlife.iterrpg.IterRpgMod;

import net.minecraftforge.registries.RegistryObject;
import net.minecraftforge.registries.ForgeRegistries;
import net.minecraftforge.registries.DeferredRegister;

import net.minecraft.world.level.block.Block;

import java.util.function.Supplier;

public class BlockRegistry {
	public static final DeferredRegister<Block> BLOCKS = DeferredRegister.create(ForgeRegistries.BLOCKS, IterRpgMod.MOD_ID);
	public static final RegistryObject<Block> GRIMSTONE = registerBlock("grimstone", () -> new GrimstoneBlock());
	public static final RegistryObject<Block> GRIMSTONE_BRICKS = registerBlock("grimstone_bricks", () -> new GrimstoneBricksBlock());
	public static final RegistryObject<Block> CRACKED_GRIMSTONE_BRICKS = registerBlock("cracked_grimstone_bricks", () -> new CrackedGrimstoneBricksBlock());
	public static final RegistryObject<Block> GRIMSTONE_BRICKS_SLAB = registerBlock("grimstone_bricks_slab", () -> new GrimstoneBricksSlabBlock());
	public static final RegistryObject<Block> POLISHED_GRIMSTONE = registerBlock("polished_grimstone", () -> new PolishedGrimstoneBlock());
	public static final RegistryObject<Block> GRIMSTONE_SLAB = registerBlock("grimstone_slab", () -> new GrimstoneSlabBlock());
	public static final RegistryObject<Block> POLISHED_GRIMSTONE_SLAB = registerBlock("polished_grimstone_slab", () -> new PolishedGrimstoneSlabBlock());
	public static final RegistryObject<Block> POLISHED_GRIMSTONE_STAIRS = registerBlock("polished_grimstone_stairs", () -> new PolishedGrimstoneStairsBlock());
	public static final RegistryObject<Block> GRIMSTONE_BRICKS_STAIRS = registerBlock("grimstone_bricks_stairs", () -> new GrimstoneBricksStairsBlock());
	public static final RegistryObject<Block> POLISHED_GRIMSTONE_WALL = registerBlock("polished_grimstone_wall", () -> new PolishedGrimstoneWallBlock());
	public static final RegistryObject<Block> GRIMSTONE_BRICKS_WALL = registerBlock("grimstone_bricks_wall", () -> new GrimstoneBricksWallBlock());
	public static final RegistryObject<Block> CHISELED_GRIMSTONE_BRICKS = registerBlock("chiseled_grimstone_bricks", () -> new ChiseledGrimstoneBricksBlock());
	public static final RegistryObject<Block> SMALL_VASE = registerBlock("small_vase", () -> new SmallVaseBlock());
	public static final RegistryObject<Block> VASE = registerBlock("vase", () -> new VaseBlock());
	public static final RegistryObject<Block> BIG_VASE = registerBlock("big_vase", () -> new BigVaseBlock());
	public static final RegistryObject<Block> AMETRINE_BLOCK = registerBlock("ametrine_block", () -> new AmetrineBlockBlock());
	public static final RegistryObject<Block> ETHERBLOOM = registerBlock("etherbloom", () -> new ArcaneFlowerBlock());
	public static final RegistryObject<Block> ARCANE_FLOWER_SEEDS = registerBlock("arcane_flower_seeds", () -> new ArcaneFlowerSeedsBlock());
	public static final RegistryObject<Block> GENERIC_DUNGEON_GEN_BLOCK = registerBlock("generic_dungeon_gen_block", () -> new GenericDungeonGenBlockBlock());
	public static final RegistryObject<Block> MAGMANUM_ORE = registerBlock("magmanum_ore", () -> new MagmanumOreBlock());
	public static final RegistryObject<Block> GEODITE = registerBlock("geodite", () -> new GeoditeBlock());
	public static final RegistryObject<Block> BLACKSTONE_GEODITE = registerBlock("blackstone_geodite", () -> new BlackstoneGeoditeBlock());
	public static final RegistryObject<Block> MAGMANUM_BLOCK = registerBlock("magmanum_block", () -> new MagmanumBlockBlock());
	public static final RegistryObject<Block> CHARGED_GRIMSTONE_BRICKS = registerBlock("charged_grimstone_bricks", () -> new ChargedGrimstoneBricksBlock());
	public static final RegistryObject<Block> GRIM_KEYHOLE = registerBlock("grim_keyhole", () -> new GrimKeyholeBlock());
	public static final RegistryObject<Block> SORROW_SPIRE_GEN_BLOCK = registerBlock("sorrow_spire_gen_block", () -> new SorrowSpireGenBlockBlock());
	public static final RegistryObject<Block> WITCHMUD = registerBlock("witchmud", () -> new WitchmudBlock());
	public static final RegistryObject<Block> CATTAIL = registerBlock("cattail", () -> new CattailBlock());
	public static final RegistryObject<Block> GIANT_CHAIN = registerBlock("giant_chain", () -> new GiantChainBlock());
	public static final RegistryObject<Block> COMPACTED_SORROWSEALED = registerBlock("compacted_sorrowsealed", () -> new CompactedSorrowsealedBlock());
	public static final RegistryObject<Block> SPIDER_EGG = registerBlock("spider_egg", () -> new SpiderEggBlock());
	public static final RegistryObject<Block> HIVESTONE = registerBlock("hivestone", () -> new HivestoneBlock());
	public static final RegistryObject<Block> TWIFFLE = registerBlock("twiffle", () -> new TwiffleBlock());
	public static final RegistryObject<Block> TWIFFLE_BLOCK = registerBlock("twiffle_block", () -> new TwiffleBlockBlock());
	public static final RegistryObject<Block> CUT_HIVESTONE = registerBlock("cut_hivestone", () -> new CutHivestoneBlock());
	public static final RegistryObject<Block> CRACKED_HIVESTONE = registerBlock("cracked_hivestone", () -> new CrackedHivestoneBlock());
	public static final RegistryObject<Block> CRUMBLING_HIVESTONE = registerBlock("crumbling_hivestone", () -> new CrumblingHivestoneBlock());
	public static final RegistryObject<Block> RUNIC_HIVESTONE = registerBlock("runic_hivestone", () -> new RunicHivestoneBlock());
	public static final RegistryObject<Block> SILKY_HIVESTONE = registerBlock("silky_hivestone", () -> new SilkyHivestoneBlock());
	public static final RegistryObject<Block> WEAVED_HIVESTONE = registerBlock("weaved_hivestone", () -> new WeavedHivestoneBlock());
	public static final RegistryObject<Block> INFESTED_HIVESTONE = registerBlock("infested_hivestone", () -> new InfestedHivestoneBlock());
	public static final RegistryObject<Block> HIVESTONE_SLAB = registerBlock("hivestone_slab", () -> new HivestoneSlabBlock());
	public static final RegistryObject<Block> HIVESTONE_STAIRS = registerBlock("hivestone_stairs", () -> new HivestoneStairsBlock());
	public static final RegistryObject<Block> HIVESTONE_WALL = registerBlock("hivestone_wall", () -> new HivestoneWallBlock());
	public static final RegistryObject<Block> CLOUD_BLOCK = registerBlock("cloud_block", () -> new CloudBlockBlock());
	public static final RegistryObject<Block> SMALL_VASE_DECO = registerBlock("small_vase_deco", () -> new SmallVaseDecoBlock());
	public static final RegistryObject<Block> VASE_DECO = registerBlock("vase_deco", () -> new VaseDecoBlock());
	public static final RegistryObject<Block> BIG_VASE_DECO = registerBlock("big_vase_deco", () -> new BigVaseDecoBlock());
	public static final RegistryObject<Block> GOBLIN_DUNGEON_GEN = registerBlock("goblin_dungeon_gen", () -> new GoblinDungeonGenBlock());
	public static final RegistryObject<Block> GUNPOWDER_BARREL = registerBlock("gunpowder_barrel", () -> new GunpowderBarrelBlock());
	public static final RegistryObject<Block> ARTHROPOD_CATACOMBS_GEN_BLOCK = registerBlock("arthropod_catacombs_gen_block", () -> new ArthropodCatacombsGenBlockBlock());
	public static final RegistryObject<Block> DRILL = registerBlock("drill", () -> new DrillBlock());
	public static final RegistryObject<Block> DEEPSLATE_GEODITE = registerBlock("deepslate_geodite", () -> new DeepslateGeoditeBlock());
	public static final RegistryObject<Block> NETHERRACK_GEODITE = registerBlock("netherrack_geodite", () -> new NetherrackGeoditeBlock());
	public static final RegistryObject<Block> ENDSTONE_GEODITE = registerBlock("endstone_geodite", () -> new EndstoneGeoditeBlock());
	public static final RegistryObject<Block> SPIDER_SILK_BLOCK = registerBlock("spider_silk_block", () -> new SpiderSilkBlockBlock());
	public static final RegistryObject<Block> AMETRINE_BRICKS = registerBlock("ametrine_bricks", () -> new AmetrineBricksBlock());
	public static final RegistryObject<Block> SACRED_LOG = registerBlock("sacred_log", () -> new SacredLogBlock());
	public static final RegistryObject<Block> SACRED_PLANKS = registerBlock("sacred_planks", () -> new SacredPlanksBlock());
	public static final RegistryObject<Block> SACRED_WOOD = registerBlock("sacred_wood", () -> new SacredWoodBlock());
	public static final RegistryObject<Block> SACRED_LEAVES = registerBlock("sacred_leaves", () -> new SacredLeavesBlock());
	public static final RegistryObject<Block> SACRED_STAIRS = registerBlock("sacred_stairs", () -> new SacredStairsBlock());
	public static final RegistryObject<Block> SACRED_SLAB = registerBlock("sacred_slab", () -> new SacredSlabBlock());
	public static final RegistryObject<Block> SACRED_FENCE = registerBlock("sacred_fence", () -> new SacredFenceBlock());
	public static final RegistryObject<Block> SACRED_FENCE_GATE = registerBlock("sacred_fence_gate", () -> new SacredFenceGateBlock());
	public static final RegistryObject<Block> SACRED_PRESSURE_PLATE = registerBlock("sacred_pressure_plate", () -> new SacredPressurePlateBlock());
	public static final RegistryObject<Block> SACRED_BUTTON = registerBlock("sacred_button", () -> new SacredButtonBlock());
	public static final RegistryObject<Block> SACRED_DOOR = registerBlock("sacred_door", () -> new SacredDoorBlock());
	public static final RegistryObject<Block> SACRED_TRAPDOOR = registerBlock("sacred_trapdoor", () -> new SacredTrapdoorBlock());
	public static final RegistryObject<Block> SACRED_SAPLING = registerBlock("sacred_sapling", () -> new SacredSaplingBlock());
	public static final RegistryObject<Block> PEARL_BLOCK = registerBlock("pearl_block", () -> new PearlBlockBlock());
	public static final RegistryObject<Block> GOBLIN_SPAWNER = registerBlock("goblin_spawner", () -> new GoblinSpawnerBlock());
	public static final RegistryObject<Block> ABYSS_QUARTZ = registerBlock("abyss_quartz", () -> new AbyssQuartzBlock());
	public static final RegistryObject<Block> ABYSSQUARTZ_BLOCK = registerBlock("abyssquartz_block", () -> new AbyssquartzBlockBlock());
	public static final RegistryObject<Block> GRIM_SOULTRAP = registerBlock("grim_soultrap", () -> new GrimSoultrapBlock());
	public static final RegistryObject<Block> BARRIER_PROJECTOR = registerBlock("barrier_projector", () -> new BarrierProjectorBlock());
	public static final RegistryObject<Block> RUNIC_GRIMSTONE = registerBlock("runic_grimstone", () -> new RunicGrimstoneBlock());
	public static final RegistryObject<Block> RUNIC_GRIMSTONE_ACTIVE = registerBlock("runic_grimstone_active", () -> new RunicGrimstoneActiveBlock());
	public static final RegistryObject<Block> GIANT_PHANTOM_CHAIN = registerBlock("giant_phantom_chain", () -> new GiantPhantomChainBlock());
	public static final RegistryObject<Block> COIN_PILE = registerBlock("coin_pile", () -> new CoinPileBlock());
	public static final RegistryObject<Block> COIN_BLOCK = registerBlock("coin_block", () -> new CoinBlockBlock());
	public static final RegistryObject<Block> GOBSTEEL_BLOCK = registerBlock("gobsteel_block", () -> new GobsteelBlockBlock());
	public static final RegistryObject<Block> PROFANE_FLESH_BLOCK = registerBlock("profane_flesh_block", () -> new ProfaneFleshBlockBlock());
	public static final RegistryObject<Block> DEMONBONES = registerBlock("demonbones", () -> new DemonbonesBlock());
	public static final RegistryObject<Block> MONOLITH_STONE = registerBlock("monolith_stone", () -> new MonolithStoneBlock());
	public static final RegistryObject<Block> EARTH_SEAL = registerBlock("earth_seal", () -> new EarthSealBlock());
	public static final RegistryObject<Block> WATER_SEAL = registerBlock("water_seal", () -> new WaterSealBlock());
	public static final RegistryObject<Block> AIR_SEAL = registerBlock("air_seal", () -> new AirSealBlock());
	public static final RegistryObject<Block> FIRE_SEAL = registerBlock("fire_seal", () -> new FireSealBlock());
	public static final RegistryObject<Block> VOID_SEAL = registerBlock("void_seal", () -> new VoidSealBlock());
	public static final RegistryObject<Block> MONOLITH_STAIRS = registerBlock("monolith_stairs", () -> new MonolithStairsBlock());
	public static final RegistryObject<Block> MONOLITH_SLAB = registerBlock("monolith_slab", () -> new MonolithSlabBlock());
	public static final RegistryObject<Block> MONOLITH_WALL = registerBlock("monolith_wall", () -> new MonolithWallBlock());
	public static final RegistryObject<Block> SPIRE_SPAWNER = registerBlock("spire_spawner", () -> new SpireSpawnerBlock());
	public static final RegistryObject<Block> GRAND_SPIRE_SPAWNER = registerBlock("grand_spire_spawner", () -> new GrandSpireSpawnerBlock());
	public static final RegistryObject<Block> TENDONS_BLOCK = registerBlock("tendons_block", () -> new TendonsBlockBlock());
	public static final RegistryObject<Block> GRIMACE_TRAP = registerBlock("grimace_trap", () -> new GrimaceTrapBlock());
	public static final RegistryObject<Block> TEAR_CATCHER = registerBlock("tear_catcher", () -> new TearCatcherBlock());
	public static final RegistryObject<Block> GRIM_LOCKER = registerBlock("grim_locker", () -> new GrimLockerBlock());
	public static final RegistryObject<Block> STRIPPED_SACRED_LOG = registerBlock("stripped_sacred_log", () -> new StrippedSacredLogBlock());
	public static final RegistryObject<Block> VOID_MAW = registerBlock("void_maw", () -> new VoidMawBlock());
	public static final RegistryObject<Block> ARCANIST_TABLE = registerBlock("arcanist_table", () -> new ArcanistTableBlock());
	public static final RegistryObject<Block> HALFLOWER = registerBlock("halflower", () -> new HalflowerBlock());
	public static final RegistryObject<Block> TOMBSTONE = registerBlock("tombstone", () -> new TombstoneBlock());
	public static final RegistryObject<Block> GRAVE_CROSS = registerBlock("grave_cross", () -> new GraveCrossBlock());

	public static <T extends Block> RegistryObject<T> registerBlock(String name, Supplier<T> block){
		RegistryObject<T> output = BLOCKS.register(name, block);
		registerBlockItem(name, output);
		return output;
	}
	public static <T extends Block> void registerBlockItem(String name, Supplier<T> block){
		ItemRegistry.ITEMS.register(name, () -> new BlockItem(block.get(), new Item.Properties()));
	}

}
