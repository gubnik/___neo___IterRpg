
/*
 *    MCreator note: This file will be REGENERATED on each build.
 */
package net.thirdlife.iterrpg.init;

import net.minecraft.world.item.Rarity;
import net.minecraft.world.item.Tiers;
import net.thirdlife.iterrpg.common.item.refactored.DaggerItem;
import net.thirdlife.iterrpg.common.item.refactored.FlailItem;
import net.thirdlife.iterrpg.common.item.refactored.SpearItem;
import net.thirdlife.iterrpg.procedures.BloodbranchProvideValueProcedure;
import net.thirdlife.iterrpg.common.item.WoodenScytheItem;
import net.thirdlife.iterrpg.common.item.WaterRuneItem;
import net.thirdlife.iterrpg.common.item.WaterIngotItem;
import net.thirdlife.iterrpg.common.item.WaterFragmentItem;
import net.thirdlife.iterrpg.common.item.WarpedGooItem;
import net.thirdlife.iterrpg.common.item.VoidRuneItem;
import net.thirdlife.iterrpg.common.item.VoidIngotItem;
import net.thirdlife.iterrpg.common.item.VoidFragmentItem;
import net.thirdlife.iterrpg.common.item.VileTissueItem;
import net.thirdlife.iterrpg.common.item.VeryGoodAndCheerfulRapierItem;
import net.thirdlife.iterrpg.common.item.UnidentifiedSpellItem;
import net.thirdlife.iterrpg.common.item.TwiffleLumpItem;
import net.thirdlife.iterrpg.common.item.TormentorItem;
import net.thirdlife.iterrpg.common.item.TombstoneFragmentItem;
import net.thirdlife.iterrpg.common.item.StormcallerItem;
import net.thirdlife.iterrpg.common.item.StoneScytheItem;
import net.thirdlife.iterrpg.common.item.StoneGeodeItem;
import net.thirdlife.iterrpg.common.item.StingerItem;
import net.thirdlife.iterrpg.common.item.StarlessnessItem;
import net.thirdlife.iterrpg.common.item.StarfishItem;
import net.thirdlife.iterrpg.common.item.SpiderSilkItem;
import net.thirdlife.iterrpg.common.item.SpiderMeadMugItem;
import net.thirdlife.iterrpg.common.item.SpellZapItem;
import net.thirdlife.iterrpg.common.item.SpellSplashesItem;
import net.thirdlife.iterrpg.common.item.SpellIgniteItem;
import net.thirdlife.iterrpg.common.item.SpellHealItem;
import net.thirdlife.iterrpg.common.item.SpellGustItem;
import net.thirdlife.iterrpg.common.item.SpellEtherboltItem;
import net.thirdlife.iterrpg.common.item.SpellEtherblastItem;
import net.thirdlife.iterrpg.common.item.SpellEmbersItem;
import net.thirdlife.iterrpg.common.item.SpellDropletsItem;
import net.thirdlife.iterrpg.common.item.SpellCultivateItem;
import net.thirdlife.iterrpg.common.item.SpellBookItem;
import net.thirdlife.iterrpg.common.item.SpellAttractItem;
import net.thirdlife.iterrpg.common.item.SolsticeItem;
import net.thirdlife.iterrpg.common.item.SeashellItem;
import net.thirdlife.iterrpg.common.item.SacrificialDaggerItem;
import net.thirdlife.iterrpg.common.item.SacredTwigItem;
import net.thirdlife.iterrpg.common.item.RaggedItem;
import net.thirdlife.iterrpg.common.item.ProfaneFleshItem;
import net.thirdlife.iterrpg.common.item.PotsherdItem;
import net.thirdlife.iterrpg.common.item.PearlItem;
import net.thirdlife.iterrpg.common.item.OtherwordlyIngotItem;
import net.thirdlife.iterrpg.common.item.NetherrackGeodeItem;
import net.thirdlife.iterrpg.common.item.NetheriteScytheItem;
import net.thirdlife.iterrpg.common.item.MugItem;
import net.thirdlife.iterrpg.common.item.MobPlacerItem;
import net.thirdlife.iterrpg.common.item.MarrowItem;
import net.thirdlife.iterrpg.common.item.MagmanumSwordItem;
import net.thirdlife.iterrpg.common.item.MagmanumPickaxeItem;
import net.thirdlife.iterrpg.common.item.MagmanumChunkItem;
import net.thirdlife.iterrpg.common.item.MagmanumArmorItem;
import net.thirdlife.iterrpg.common.item.IronScytheItem;
import net.thirdlife.iterrpg.common.item.HumieButcherItem;
import net.thirdlife.iterrpg.common.item.HollowVisageItem;
import net.thirdlife.iterrpg.common.item.HauntedSplinterItem;
import net.thirdlife.iterrpg.common.item.HarvestItem;
import net.thirdlife.iterrpg.common.item.GoldenScytheItem;
import net.thirdlife.iterrpg.common.item.GobsteelScrapItem;
import net.thirdlife.iterrpg.common.item.GobsteelJavelinItem;
import net.thirdlife.iterrpg.common.item.GistItem;
import net.thirdlife.iterrpg.common.item.GiantWeeperTearItem;
import net.thirdlife.iterrpg.common.item.FireRuneItem;
import net.thirdlife.iterrpg.common.item.FireIngotItem;
import net.thirdlife.iterrpg.common.item.FireFragmentItem;
import net.thirdlife.iterrpg.common.item.EtherbloomDecoctionItem;
import net.thirdlife.iterrpg.common.item.EternalTorrentItem;
import net.thirdlife.iterrpg.common.item.EssenceOfCreationItem;
import net.thirdlife.iterrpg.common.item.EndstoneGeodeItem;
import net.thirdlife.iterrpg.common.item.EmptyRuneItem;
import net.thirdlife.iterrpg.common.item.ElementalUpgradeItem;
import net.thirdlife.iterrpg.common.item.ElementalSwordItem;
import net.thirdlife.iterrpg.common.item.ElementalIngotItem;
import net.thirdlife.iterrpg.common.item.ElementalFragmentItem;
import net.thirdlife.iterrpg.common.item.ElementalArmorItem;
import net.thirdlife.iterrpg.common.item.EctoplasmItem;
import net.thirdlife.iterrpg.common.item.EarthRuneItem;
import net.thirdlife.iterrpg.common.item.EarthIngotItem;
import net.thirdlife.iterrpg.common.item.EarthFragmentItem;
import net.thirdlife.iterrpg.common.item.DriftbowItem;
import net.thirdlife.iterrpg.common.item.DiamondScytheItem;
import net.thirdlife.iterrpg.common.item.DemonboneItem;
import net.thirdlife.iterrpg.common.item.DemonboneFragmentsItem;
import net.thirdlife.iterrpg.common.item.DeepsteelSwordItem;
import net.thirdlife.iterrpg.common.item.DeepsteelPickaxeItem;
import net.thirdlife.iterrpg.common.item.DeepsteelIngotItem;
import net.thirdlife.iterrpg.common.item.DeepslateGeodeItem;
import net.thirdlife.iterrpg.common.item.CrystalTearItem;
import net.thirdlife.iterrpg.common.item.CrescentItem;
import net.thirdlife.iterrpg.common.item.CoinPouchItem;
import net.thirdlife.iterrpg.common.item.CaltropItem;
import net.thirdlife.iterrpg.common.item.CalibratedLensItem;
import net.thirdlife.iterrpg.common.item.BottleOfObsidianTearsItem;
import net.thirdlife.iterrpg.common.item.BonbItem;
import net.thirdlife.iterrpg.common.item.BloodthirstItem;
import net.thirdlife.iterrpg.common.item.BloodbranchItem;
import net.thirdlife.iterrpg.common.item.BlackstoneGeodeItem;
import net.thirdlife.iterrpg.common.item.BeerMugItem;
import net.thirdlife.iterrpg.common.item.AmetrineSwordItem;
import net.thirdlife.iterrpg.common.item.AmetrineShovelItem;
import net.thirdlife.iterrpg.common.item.AmetrineScytheItem;
import net.thirdlife.iterrpg.common.item.AmetrinePickaxeItem;
import net.thirdlife.iterrpg.common.item.AmetrinePendantItem;
import net.thirdlife.iterrpg.common.item.AmetrineNuggetItem;
import net.thirdlife.iterrpg.common.item.AmetrineItem;
import net.thirdlife.iterrpg.common.item.AmetrineHoeItem;
import net.thirdlife.iterrpg.common.item.AmetrineAxeItem;
import net.thirdlife.iterrpg.common.item.AmethystWandItem;
import net.thirdlife.iterrpg.common.item.AirRuneItem;
import net.thirdlife.iterrpg.common.item.AirIngotItem;
import net.thirdlife.iterrpg.common.item.AirFragmentItem;
import net.thirdlife.iterrpg.common.item.AbyssquartzShardItem;
import net.thirdlife.iterrpg.common.item.AbyssquartzCapacitatorItem;
import net.thirdlife.iterrpg.common.item.AbstruseClothItem;
import net.thirdlife.iterrpg.IterRpgMod;

import net.minecraftforge.registries.RegistryObject;
import net.minecraftforge.registries.ForgeRegistries;
import net.minecraftforge.registries.DeferredRegister;
import net.minecraftforge.fml.event.lifecycle.FMLClientSetupEvent;
import net.minecraftforge.fml.common.Mod;
import net.minecraftforge.eventbus.api.SubscribeEvent;
import net.minecraftforge.common.ForgeSpawnEggItem;
import net.minecraftforge.api.distmarker.Dist;

import net.minecraft.world.item.Item;
import net.minecraft.resources.ResourceLocation;
import net.minecraft.client.renderer.item.ItemProperties;

@Mod.EventBusSubscriber(bus = Mod.EventBusSubscriber.Bus.MOD, value = Dist.CLIENT)
public class ItemRegistry {
	public static final DeferredRegister<Item> ITEMS = DeferredRegister.create(ForgeRegistries.ITEMS, IterRpgMod.MOD_ID);

	public static final RegistryObject<Item> WODDEN_DAGGER = ITEMS.register("wodden_dagger", () -> new DaggerItem(Tiers.WOOD, new Item.Properties()));
	public static final RegistryObject<Item> STONE_DAGGER = ITEMS.register("stone_dagger", () -> new DaggerItem(Tiers.STONE, new Item.Properties()));
	public static final RegistryObject<Item> IRON_DAGGER = ITEMS.register("iron_dagger", () -> new DaggerItem(Tiers.IRON, new Item.Properties()));
	public static final RegistryObject<Item> GOLDEN_DAGGER = ITEMS.register("golden_dagger", () -> new DaggerItem(Tiers.GOLD, new Item.Properties()));
	public static final RegistryObject<Item> DIAMOND_DAGGER = ITEMS.register("diamond_dagger", () -> new DaggerItem(Tiers.DIAMOND, new Item.Properties()));
	public static final RegistryObject<Item> NETHERITE_DAGGER = ITEMS.register("netherite_dagger", () -> new DaggerItem(Tiers.NETHERITE, new Item.Properties()));
	public static final RegistryObject<Item> AMETRINE_DAGGER = ITEMS.register("ametrine_dagger", () -> new DaggerItem(TierRegistry.AMETRINE, new Item.Properties()));

	public static final RegistryObject<Item> WOODEN_SPEAR = ITEMS.register("wooden_spear", () -> new SpearItem(Tiers.WOOD, new Item.Properties()));
	public static final RegistryObject<Item> STONE_SPEAR = ITEMS.register("stone_spear", () -> new SpearItem(Tiers.STONE, new Item.Properties()));
	public static final RegistryObject<Item> IRON_SPEAR = ITEMS.register("iron_spear", () -> new SpearItem(Tiers.IRON, new Item.Properties()));
	public static final RegistryObject<Item> GOLDEN_SPEAR = ITEMS.register("golden_spear", () -> new SpearItem(Tiers.GOLD, new Item.Properties()));
	public static final RegistryObject<Item> DIAMOND_SPEAR = ITEMS.register("diamond_spear", () -> new SpearItem(Tiers.DIAMOND, new Item.Properties()));
	public static final RegistryObject<Item> NETHERITE_SPEAR = ITEMS.register("netherite_spear", () -> new SpearItem(Tiers.NETHERITE, new Item.Properties()));
	public static final RegistryObject<Item> AMETRINE_SPEAR = ITEMS.register("ametrine_spear", () -> new SpearItem(TierRegistry.AMETRINE, new Item.Properties()));

	public static final RegistryObject<Item> WOODEN_FLAIL = ITEMS.register("wooden_flail", () -> new FlailItem(Tiers.WOOD, new Item.Properties()));
	public static final RegistryObject<Item> STONE_FLAIL = ITEMS.register("stone_flail", () -> new FlailItem(Tiers.STONE, new Item.Properties()));
	public static final RegistryObject<Item> IRON_FLAIL = ITEMS.register("iron_flail", () -> new FlailItem(Tiers.IRON, new Item.Properties()));
	public static final RegistryObject<Item> GOLDEN_FLAIL = ITEMS.register("golden_flail", () -> new FlailItem(Tiers.GOLD, new Item.Properties()));
	public static final RegistryObject<Item> DIAMOND_FLAIL = ITEMS.register("diamond_flail", () -> new FlailItem(Tiers.DIAMOND, new Item.Properties()));
	public static final RegistryObject<Item> NETHERITE_FLAIL = ITEMS.register("netherite_flail", () -> new FlailItem(Tiers.NETHERITE, new Item.Properties()));
	public static final RegistryObject<Item> AMETRINE_FLAIL = ITEMS.register("ametrine_flail", () -> new FlailItem(TierRegistry.AMETRINE, new Item.Properties()));

	public static final RegistryObject<Item> WOODEN_SCYTHE = ITEMS.register("wooden_scythe", () -> new WoodenScytheItem());
	public static final RegistryObject<Item> STONE_SCYTHE = ITEMS.register("stone_scythe", () -> new StoneScytheItem());
	public static final RegistryObject<Item> IRON_SCYTHE = ITEMS.register("iron_scythe", () -> new IronScytheItem());
	public static final RegistryObject<Item> GOLDEN_SCYTHE = ITEMS.register("golden_scythe", () -> new GoldenScytheItem());
	public static final RegistryObject<Item> DIAMOND_SCYTHE = ITEMS.register("diamond_scythe", () -> new DiamondScytheItem());
	public static final RegistryObject<Item> NETHERITE_SCYTHE = ITEMS.register("netherite_scythe", () -> new NetheriteScytheItem());
	public static final RegistryObject<Item> AMETRINE_SCYTHE = ITEMS.register("ametrine_scythe", () -> new AmetrineScytheItem());


	public static final RegistryObject<Item> AMETRINE_INGOT = ITEMS.register("ametrine_ingot", () -> new Item(new Item.Properties()));
	public static final RegistryObject<Item> SPAWNER_FRAGMENT = ITEMS.register("spawner_fragment", () -> new Item(new Item.Properties().rarity(Rarity.UNCOMMON)));
	public static final RegistryObject<Item> COIN = ITEMS.register("coin", () -> new Item(new Item.Properties()));
	public static final RegistryObject<Item> ETHER_DUST = ITEMS.register("ether_dust", () -> new Item(new Item.Properties()));

	public static final RegistryObject<Item> GRIEVER_SPAWN_EGG = ITEMS.register("griever_spawn_egg", () -> new ForgeSpawnEggItem(IterRpgModEntities.GRIEVER, -13686721, -15531998, new Item.Properties()));
	public static final RegistryObject<Item> MOURNSTONE_SPAWN_EGG = ITEMS.register("mournstone_spawn_egg", () -> new ForgeSpawnEggItem(IterRpgModEntities.MOURNSTONE, -13686721, -1020441, new Item.Properties()));
	public static final RegistryObject<Item> MAGMANUM_CHUNK = ITEMS.register("magmanum_chunk", () -> new MagmanumChunkItem());
	public static final RegistryObject<Item> EARTH_RUNE = ITEMS.register("earth_rune", () -> new EarthRuneItem());
	public static final RegistryObject<Item> GOBLIN_WARRIOR_SPAWN_EGG = ITEMS.register("goblin_warrior_spawn_egg", () -> new ForgeSpawnEggItem(IterRpgModEntities.GOBLIN_WARRIOR, -5392333, -7500906, new Item.Properties()));
	public static final RegistryObject<Item> WATER_RUNE = ITEMS.register("water_rune", () -> new WaterRuneItem());
	public static final RegistryObject<Item> WATER_FRAGMENT = ITEMS.register("water_fragment", () -> new WaterFragmentItem());
	public static final RegistryObject<Item> EMPTY_RUNE = ITEMS.register("empty_rune", () -> new EmptyRuneItem());
	public static final RegistryObject<Item> FIRE_ELEMENTAL_SPAWN_EGG = ITEMS.register("fire_elemental_spawn_egg", () -> new ForgeSpawnEggItem(IterRpgModEntities.FIRE_ELEMENTAL, -6213352, -1917878, new Item.Properties()));
	public static final RegistryObject<Item> EARTH_FRAGMENT = ITEMS.register("earth_fragment", () -> new EarthFragmentItem());
	public static final RegistryObject<Item> BLOATED_SPAWN_EGG = ITEMS.register("bloated_spawn_egg", () -> new ForgeSpawnEggItem(IterRpgModEntities.BLOATED, -11693440, -10100515, new Item.Properties()));
	public static final RegistryObject<Item> MAGMANUM_ARMOR_HELMET = ITEMS.register("magmanum_armor_helmet", () -> new MagmanumArmorItem.Helmet());
	public static final RegistryObject<Item> MAGMANUM_ARMOR_CHESTPLATE = ITEMS.register("magmanum_armor_chestplate", () -> new MagmanumArmorItem.Chestplate());
	public static final RegistryObject<Item> MAGMANUM_ARMOR_LEGGINGS = ITEMS.register("magmanum_armor_leggings", () -> new MagmanumArmorItem.Leggings());
	public static final RegistryObject<Item> MAGMANUM_ARMOR_BOOTS = ITEMS.register("magmanum_armor_boots", () -> new MagmanumArmorItem.Boots());
	public static final RegistryObject<Item> EARTH_ELEMENTAL_SPAWN_EGG = ITEMS.register("earth_elemental_spawn_egg", () -> new ForgeSpawnEggItem(IterRpgModEntities.EARTH_ELEMENTAL, -10730928, -11030686, new Item.Properties()));
	public static final RegistryObject<Item> WEEPER_SPAWN_EGG = ITEMS.register("weeper_spawn_egg", () -> new ForgeSpawnEggItem(IterRpgModEntities.WEEPER, -13686721, -14349255, new Item.Properties()));
	public static final RegistryObject<Item> CRYSTAL_TEAR = ITEMS.register("crystal_tear", () -> new CrystalTearItem());
	public static final RegistryObject<Item> SORROWSEALED_SPAWN_EGG = ITEMS.register("sorrowsealed_spawn_egg", () -> new ForgeSpawnEggItem(IterRpgModEntities.SORROWSEALED, -11580839, -1020441, new Item.Properties()));
	public static final RegistryObject<Item> BLOODBRANCH = ITEMS.register("bloodbranch", () -> new BloodbranchItem());
	public static final RegistryObject<Item> TORMENTOR = ITEMS.register("tormentor", () -> new TormentorItem());
	public static final RegistryObject<Item> DEMONBONE = ITEMS.register("demonbone", () -> new DemonboneItem());
	public static final RegistryObject<Item> SCALLOP_SPAWN_EGG = ITEMS.register("scallop_spawn_egg", () -> new ForgeSpawnEggItem(IterRpgModEntities.SCALLOP, -10134683, -2706222, new Item.Properties()));
	public static final RegistryObject<Item> GIANT_SPIDER_SPAWN_EGG = ITEMS.register("giant_spider_spawn_egg", () -> new ForgeSpawnEggItem(IterRpgModEntities.GIANT_SPIDER, -12766183, -5763570, new Item.Properties()));
	public static final RegistryObject<Item> SPIDER_SILK = ITEMS.register("spider_silk", () -> new SpiderSilkItem());
	public static final RegistryObject<Item> SPIDERLING_SPAWN_EGG = ITEMS.register("spiderling_spawn_egg", () -> new ForgeSpawnEggItem(IterRpgModEntities.SPIDERLING, -2372425, -13029294, new Item.Properties()));
	public static final RegistryObject<Item> TWIFFLE_LUMP = ITEMS.register("twiffle_lump", () -> new TwiffleLumpItem());
	public static final RegistryObject<Item> AIR_RUNE = ITEMS.register("air_rune", () -> new AirRuneItem());
	public static final RegistryObject<Item> FIRE_RUNE = ITEMS.register("fire_rune", () -> new FireRuneItem());
	public static final RegistryObject<Item> VOID_RUNE = ITEMS.register("void_rune", () -> new VoidRuneItem());
	public static final RegistryObject<Item> AIR_FRAGMENT = ITEMS.register("air_fragment", () -> new AirFragmentItem());
	public static final RegistryObject<Item> FIRE_FRAGMENT = ITEMS.register("fire_fragment", () -> new FireFragmentItem());
	public static final RegistryObject<Item> VOID_FRAGMENT = ITEMS.register("void_fragment", () -> new VoidFragmentItem());
	public static final RegistryObject<Item> ELEMENTAL_INGOT = ITEMS.register("elemental_ingot", () -> new ElementalIngotItem());
	public static final RegistryObject<Item> ELEMENTAL_FRAGMENT = ITEMS.register("elemental_fragment", () -> new ElementalFragmentItem());
	public static final RegistryObject<Item> STARFISH = ITEMS.register("starfish", () -> new StarfishItem());
	public static final RegistryObject<Item> SEASHELL = ITEMS.register("seashell", () -> new SeashellItem());
	public static final RegistryObject<Item> PEARL = ITEMS.register("pearl", () -> new PearlItem());
	public static final RegistryObject<Item> POTSHERD = ITEMS.register("potsherd", () -> new PotsherdItem());
	public static final RegistryObject<Item> REVENANT_SPAWN_EGG = ITEMS.register("revenant_spawn_egg", () -> new ForgeSpawnEggItem(IterRpgModEntities.REVENANT, -3490672, -4973520, new Item.Properties()));
	public static final RegistryObject<Item> MUDKIN_SPAWN_EGG = ITEMS.register("mudkin_spawn_egg", () -> new ForgeSpawnEggItem(IterRpgModEntities.MUDKIN, -11060690, -11574471, new Item.Properties()));
	public static final RegistryObject<Item> HOBGOBLIN_SPAWN_EGG = ITEMS.register("hobgoblin_spawn_egg", () -> new ForgeSpawnEggItem(IterRpgModEntities.HOBGOBLIN, -15633798, -13230801, new Item.Properties()));
	public static final RegistryObject<Item> PEEPER_SPAWN_EGG = ITEMS.register("peeper_spawn_egg", () -> new ForgeSpawnEggItem(IterRpgModEntities.PEEPER, -12368305, -15592681, new Item.Properties()));
	public static final RegistryObject<Item> HOLLOW_VISAGE = ITEMS.register("hollow_visage", () -> new HollowVisageItem());
	public static final RegistryObject<Item> STONE_GEODE = ITEMS.register("stone_geode", () -> new StoneGeodeItem());
	public static final RegistryObject<Item> NETHERRACK_GEODE = ITEMS.register("netherrack_geode", () -> new NetherrackGeodeItem());
	public static final RegistryObject<Item> BLACKSTONE_GEODE = ITEMS.register("blackstone_geode", () -> new BlackstoneGeodeItem());
	public static final RegistryObject<Item> VOID_ELEMENTAL_SPAWN_EGG = ITEMS.register("void_elemental_spawn_egg", () -> new ForgeSpawnEggItem(IterRpgModEntities.VOID_ELEMENTAL, -15462119, -34575, new Item.Properties()));
	public static final RegistryObject<Item> AIR_ELEMENTAL_SPAWN_EGG = ITEMS.register("air_elemental_spawn_egg", () -> new ForgeSpawnEggItem(IterRpgModEntities.AIR_ELEMENTAL, -3542273, -1917878, new Item.Properties()));
	public static final RegistryObject<Item> WATER_ELEMENTAL_SPAWN_EGG = ITEMS.register("water_elemental_spawn_egg", () -> new ForgeSpawnEggItem(IterRpgModEntities.WATER_ELEMENTAL, -9521193, -14795684, new Item.Properties()));
	public static final RegistryObject<Item> GOBLIN_SPAWN_EGG = ITEMS.register("goblin_spawn_egg", () -> new ForgeSpawnEggItem(IterRpgModEntities.GOBLIN, -5392333, -9359322, new Item.Properties()));
	public static final RegistryObject<Item> CALTROP = ITEMS.register("caltrop", () -> new CaltropItem());
	public static final RegistryObject<Item> INSATIABLE_SPAWN_EGG = ITEMS.register("insatiable_spawn_egg", () -> new ForgeSpawnEggItem(IterRpgModEntities.INSATIABLE, -11107202, -11753854, new Item.Properties()));
	public static final RegistryObject<Item> SACRED_TWIG = ITEMS.register("sacred_twig", () -> new SacredTwigItem());
	public static final RegistryObject<Item> CRESCENT = ITEMS.register("crescent", () -> new CrescentItem());
	public static final RegistryObject<Item> AMETRINE_NUGGET = ITEMS.register("ametrine_nugget", () -> new AmetrineNuggetItem());
	public static final RegistryObject<Item> MAGMANUM_PICKAXE = ITEMS.register("magmanum_pickaxe", () -> new MagmanumPickaxeItem());
	public static final RegistryObject<Item> GOBSTEEL_SCRAP = ITEMS.register("gobsteel_scrap", () -> new GobsteelScrapItem());
	public static final RegistryObject<Item> MOB_PLACER = ITEMS.register("mob_placer", () -> new MobPlacerItem());
	public static final RegistryObject<Item> ELEMENTAL_SWORD = ITEMS.register("elemental_sword", () -> new ElementalSwordItem());
	public static final RegistryObject<Item> DEEPSLATE_GEODE = ITEMS.register("deepslate_geode", () -> new DeepslateGeodeItem());
	public static final RegistryObject<Item> HUMIE_BUTCHER = ITEMS.register("humie_butcher", () -> new HumieButcherItem());
	public static final RegistryObject<Item> MAGMANUM_SWORD = ITEMS.register("magmanum_sword", () -> new MagmanumSwordItem());
	public static final RegistryObject<Item> VERY_GOOD_AND_CHEERFUL_RAPIER = ITEMS.register("very_good_and_cheerful_rapier", () -> new VeryGoodAndCheerfulRapierItem());
	public static final RegistryObject<Item> ENDSTONE_GEODE = ITEMS.register("endstone_geode", () -> new EndstoneGeodeItem());
	public static final RegistryObject<Item> BLOODTHIRST = ITEMS.register("bloodthirst", () -> new BloodthirstItem());
	public static final RegistryObject<Item> EARTH_INGOT = ITEMS.register("earth_ingot", () -> new EarthIngotItem());
	public static final RegistryObject<Item> WATER_INGOT = ITEMS.register("water_ingot", () -> new WaterIngotItem());
	public static final RegistryObject<Item> AIR_INGOT = ITEMS.register("air_ingot", () -> new AirIngotItem());
	public static final RegistryObject<Item> FIRE_INGOT = ITEMS.register("fire_ingot", () -> new FireIngotItem());
	public static final RegistryObject<Item> VOID_INGOT = ITEMS.register("void_ingot", () -> new VoidIngotItem());
	public static final RegistryObject<Item> ABYSSQUARTZ_SHARD = ITEMS.register("abyssquartz_shard", () -> new AbyssquartzShardItem());
	public static final RegistryObject<Item> STINGER = ITEMS.register("stinger", () -> new StingerItem());
	public static final RegistryObject<Item> GIANT_WEEPER_TEAR = ITEMS.register("giant_weeper_tear", () -> new GiantWeeperTearItem());
	public static final RegistryObject<Item> MARROW = ITEMS.register("marrow", () -> new MarrowItem());
	public static final RegistryObject<Item> SACRIFICIAL_DAGGER = ITEMS.register("sacrificial_dagger", () -> new SacrificialDaggerItem());
	public static final RegistryObject<Item> FIEND_SPAWN_EGG = ITEMS.register("fiend_spawn_egg", () -> new ForgeSpawnEggItem(IterRpgModEntities.FIEND, -4379085, -3490672, new Item.Properties()));
	public static final RegistryObject<Item> CARCASS_SPAWN_EGG = ITEMS.register("carcass_spawn_egg", () -> new ForgeSpawnEggItem(IterRpgModEntities.CARCASS, -3490672, -2279376, new Item.Properties()));
	public static final RegistryObject<Item> PROFANE_FLESH = ITEMS.register("profane_flesh", () -> new ProfaneFleshItem());
	public static final RegistryObject<Item> HARVEST = ITEMS.register("harvest", () -> new HarvestItem());
	public static final RegistryObject<Item> ETERNAL_TORRENT = ITEMS.register("eternal_torrent", () -> new EternalTorrentItem());
	public static final RegistryObject<Item> STORMCALLER = ITEMS.register("stormcaller", () -> new StormcallerItem());
	public static final RegistryObject<Item> SOLSTICE = ITEMS.register("solstice", () -> new SolsticeItem());
	public static final RegistryObject<Item> STARLESSNESS = ITEMS.register("starlessness", () -> new StarlessnessItem());
	public static final RegistryObject<Item> CALIBRATED_LENS = ITEMS.register("calibrated_lens", () -> new CalibratedLensItem());
	public static final RegistryObject<Item> SPELL_BOOK = ITEMS.register("spell_book", () -> new SpellBookItem());
	public static final RegistryObject<Item> AMETRINE_PENDANT = ITEMS.register("ametrine_pendant", () -> new AmetrinePendantItem());
	public static final RegistryObject<Item> DWARF_SPAWN_EGG = ITEMS.register("dwarf_spawn_egg", () -> new ForgeSpawnEggItem(IterRpgModEntities.DWARF, -8098460, -5353678, new Item.Properties()));
	public static final RegistryObject<Item> MUG = ITEMS.register("mug", () -> new MugItem());
	public static final RegistryObject<Item> BEER_MUG = ITEMS.register("beer_mug", () -> new BeerMugItem());
	public static final RegistryObject<Item> SPIDER_MEAD_MUG = ITEMS.register("spider_mead_mug", () -> new SpiderMeadMugItem());
	public static final RegistryObject<Item> DRIFTBOW = ITEMS.register("driftbow", () -> new DriftbowItem());
	public static final RegistryObject<Item> ABYSSQUARTZ_CAPACITATOR = ITEMS.register("abyssquartz_capacitator", () -> new AbyssquartzCapacitatorItem());
	public static final RegistryObject<Item> SPELL_HEAL = ITEMS.register("spell_heal", () -> new SpellHealItem());
	public static final RegistryObject<Item> AMETHYST_WAND = ITEMS.register("amethyst_wand", () -> new AmethystWandItem());
	public static final RegistryObject<Item> RAGGED_HELMET = ITEMS.register("ragged_helmet", () -> new RaggedItem.Helmet());
	public static final RegistryObject<Item> RAGGED_CHESTPLATE = ITEMS.register("ragged_chestplate", () -> new RaggedItem.Chestplate());
	public static final RegistryObject<Item> RAGGED_LEGGINGS = ITEMS.register("ragged_leggings", () -> new RaggedItem.Leggings());
	public static final RegistryObject<Item> RAGGED_BOOTS = ITEMS.register("ragged_boots", () -> new RaggedItem.Boots());
	public static final RegistryObject<Item> ELEMENTAL_UPGRADE = ITEMS.register("elemental_upgrade", () -> new ElementalUpgradeItem());

	public static final RegistryObject<Item> AMETRINE_HELMET = ITEMS.register("ametrine_helmet", () -> new AmetrineItem.Helmet());
	public static final RegistryObject<Item> AMETRINE_CHESTPLATE = ITEMS.register("ametrine_chestplate", () -> new AmetrineItem.Chestplate());
	public static final RegistryObject<Item> AMETRINE_LEGGINGS = ITEMS.register("ametrine_leggings", () -> new AmetrineItem.Leggings());
	public static final RegistryObject<Item> AMETRINE_BOOTS = ITEMS.register("ametrine_boots", () -> new AmetrineItem.Boots());
	public static final RegistryObject<Item> AMETRINE_SWORD = ITEMS.register("ametrine_sword", () -> new AmetrineSwordItem());
	public static final RegistryObject<Item> AMETRINE_PICKAXE = ITEMS.register("ametrine_pickaxe", () -> new AmetrinePickaxeItem());
	public static final RegistryObject<Item> AMETRINE_AXE = ITEMS.register("ametrine_axe", () -> new AmetrineAxeItem());
	public static final RegistryObject<Item> AMETRINE_SHOVEL = ITEMS.register("ametrine_shovel", () -> new AmetrineShovelItem());
	public static final RegistryObject<Item> AMETRINE_HOE = ITEMS.register("ametrine_hoe", () -> new AmetrineHoeItem());

	public static final RegistryObject<Item> ESSENCE_OF_CREATION = ITEMS.register("essence_of_creation", () -> new EssenceOfCreationItem());
	public static final RegistryObject<Item> SPELL_IGNITE = ITEMS.register("spell_ignite", () -> new SpellIgniteItem());
	public static final RegistryObject<Item> SCAB_SPAWN_EGG = ITEMS.register("scab_spawn_egg", () -> new ForgeSpawnEggItem(IterRpgModEntities.SCAB, -52429, -2178172, new Item.Properties()));
	public static final RegistryObject<Item> SPELL_GUST = ITEMS.register("spell_gust", () -> new SpellGustItem());
	public static final RegistryObject<Item> SPELL_SPLASHES = ITEMS.register("spell_splashes", () -> new SpellSplashesItem());
	public static final RegistryObject<Item> BOTTLE_OF_OBSIDIAN_TEARS = ITEMS.register("bottle_of_obsidian_tears", () -> new BottleOfObsidianTearsItem());
	public static final RegistryObject<Item> BONB = ITEMS.register("bonb", () -> new BonbItem());
	public static final RegistryObject<Item> GOBSTEEL_JAVELIN = ITEMS.register("gobsteel_javelin", () -> new GobsteelJavelinItem());
	public static final RegistryObject<Item> SPELL_CULTIVATE = ITEMS.register("spell_cultivate", () -> new SpellCultivateItem());
	public static final RegistryObject<Item> SPELL_ATTRACT = ITEMS.register("spell_attract", () -> new SpellAttractItem());
	public static final RegistryObject<Item> VILE_TISSUE = ITEMS.register("vile_tissue", () -> new VileTissueItem());
	public static final RegistryObject<Item> DEMONBONE_FRAGMENTS = ITEMS.register("demonbone_fragments", () -> new DemonboneFragmentsItem());
	public static final RegistryObject<Item> ETHERBLOOM_DECOCTION = ITEMS.register("etherbloom_decoction", () -> new EtherbloomDecoctionItem());
	public static final RegistryObject<Item> SMALL_SCALLOP_SPAWN_EGG = ITEMS.register("small_scallop_spawn_egg", () -> new ForgeSpawnEggItem(IterRpgModEntities.SMALL_SCALLOP, -10134683, -2706222, new Item.Properties()));
	public static final RegistryObject<Item> DEEPSTEEL_INGOT = ITEMS.register("deepsteel_ingot", () -> new DeepsteelIngotItem());
	public static final RegistryObject<Item> DEEPSTEEL_SWORD = ITEMS.register("deepsteel_sword", () -> new DeepsteelSwordItem());
	public static final RegistryObject<Item> DEEPSTEEL_PICKAXE = ITEMS.register("deepsteel_pickaxe", () -> new DeepsteelPickaxeItem());
	public static final RegistryObject<Item> UNIDENTIFIED_SPELL = ITEMS.register("unidentified_spell", () -> new UnidentifiedSpellItem());
	public static final RegistryObject<Item> WARPED_GOO = ITEMS.register("warped_goo", () -> new WarpedGooItem());
	public static final RegistryObject<Item> SPELL_ETHERBOLT = ITEMS.register("spell_etherbolt", () -> new SpellEtherboltItem());
	public static final RegistryObject<Item> SPELL_ETHERBLAST = ITEMS.register("spell_etherblast", () -> new SpellEtherblastItem());
	public static final RegistryObject<Item> ABSTRUSE_CLOTH = ITEMS.register("abstruse_cloth", () -> new AbstruseClothItem());
	public static final RegistryObject<Item> GIST = ITEMS.register("gist", () -> new GistItem());
	public static final RegistryObject<Item> UNBOUND_SOUL_SPAWN_EGG = ITEMS.register("unbound_soul_spawn_egg", () -> new ForgeSpawnEggItem(IterRpgModEntities.UNBOUND_SOUL, -7231558, -10127481, new Item.Properties()));
	public static final RegistryObject<Item> TOMBSTONE_FRAGMENT = ITEMS.register("tombstone_fragment", () -> new TombstoneFragmentItem());
	public static final RegistryObject<Item> HAUNTED_SPLINTER = ITEMS.register("haunted_splinter", () -> new HauntedSplinterItem());
	public static final RegistryObject<Item> ELEMENTAL_ARMOR_HELMET = ITEMS.register("elemental_armor_helmet", () -> new ElementalArmorItem.Helmet());
	public static final RegistryObject<Item> ELEMENTAL_ARMOR_CHESTPLATE = ITEMS.register("elemental_armor_chestplate", () -> new ElementalArmorItem.Chestplate());
	public static final RegistryObject<Item> ELEMENTAL_ARMOR_LEGGINGS = ITEMS.register("elemental_armor_leggings", () -> new ElementalArmorItem.Leggings());
	public static final RegistryObject<Item> ELEMENTAL_ARMOR_BOOTS = ITEMS.register("elemental_armor_boots", () -> new ElementalArmorItem.Boots());
	public static final RegistryObject<Item> ECTOPLASM = ITEMS.register("ectoplasm", () -> new EctoplasmItem());
	public static final RegistryObject<Item> OTHERWORDLY_INGOT = ITEMS.register("otherwordly_ingot", () -> new OtherwordlyIngotItem());
	public static final RegistryObject<Item> COIN_POUCH = ITEMS.register("coin_pouch", CoinPouchItem::new);
	public static final RegistryObject<Item> SPELL_EMBERS = ITEMS.register("spell_embers", () -> new SpellEmbersItem());
	public static final RegistryObject<Item> SPELL_DROPLETS = ITEMS.register("spell_droplets", () -> new SpellDropletsItem());
	public static final RegistryObject<Item> SPELL_ZAP = ITEMS.register("spell_zap", () -> new SpellZapItem());


	@SubscribeEvent
	public static void clientLoad(FMLClientSetupEvent event) {
		event.enqueueWork(() -> {
			ItemProperties.register(BLOODBRANCH.get(), new ResourceLocation("iter_rpg:bloodbranch_pulling"), (itemStackToRender, clientWorld, entity, itemEntityId) -> (float) BloodbranchProvideValueProcedure.execute(entity, itemStackToRender));
		});
	}
}
